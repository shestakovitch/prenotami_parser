import time
import random
from pathlib import Path
from selenium.common import NoSuchElementException, TimeoutException
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏

from config import BASE_URL, LOGIN, PASSWORD, USER_NAME
from telegram_sender import send_message, send_pic
from logger_config import setup_logger

logger = setup_logger(__name__)


def random_sleep(min_seconds=1, max_seconds=5):
    time.sleep(random.uniform(min_seconds, max_seconds))


def scroll_page(driver):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ –∫–æ–Ω—Ü–∞"""
    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
    random_sleep()


def move_mouse(driver):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏"""
    actions = ActionChains(driver)
    actions.move_to_element(driver.find_element(By.TAG_NAME, "body")).perform()
    random_sleep()


def login(driver):
    logger.info("–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ª–æ–≥–∏–Ω")
    driver.get(url=BASE_URL)

    try:
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —ç–º—É–ª–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏
        scroll_page(driver)
        move_mouse(driver)

        email_element = driver.find_element(By.ID, value="login-email")
        email_element.clear()
        email_element.send_keys(LOGIN)
        random_sleep()

        password_element = driver.find_element(By.ID, value="login-password")
        password_element.clear()
        password_element.send_keys(PASSWORD)
        password_element.send_keys(Keys.RETURN)
        random_sleep()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ: {e}")


def check_unavailable(driver):
    try:
        if "unavailable" in driver.page_source.lower():
            driver.quit()
            return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
    return False


def check_login(driver):
    try:
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located(
                (By.XPATH, f"//figure[@class='main-nav__avatar']//figcaption[contains(text(), '{USER_NAME}')]"))
        )
        return True
    except NoSuchElementException:
        return False
    except TimeoutException:
        logger.warning("‚è±Ô∏è –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –ª–æ–≥–∏–Ω–∞.")
        return False


def go_to_services(driver):
    try:
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —ç–º—É–ª–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏
        scroll_page(driver)
        move_mouse(driver)

        driver.find_element(By.ID, value="advanced").send_keys(Keys.ENTER)
        logger.info("‚û°Ô∏è –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∑–∞–ø–∏—Å—å—é")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ: {e}")
        driver.quit()
        return


def check_popup_or_site_down(driver, timeout=10):
    random_sleep()
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ø–∞–ø —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–ª–æ—Ç–æ–≤
        popup = WebDriverWait(driver, timeout).until(
            EC.presence_of_element_located((
                By.XPATH,
                "//*[contains(text(), 'Sorry, all appointments for this service are currently booked')]"
            ))
        )
        logger.info("‚ö†Ô∏è –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ: %s", popup.text)

        ok_button = WebDriverWait(driver, timeout).until(
            EC.element_to_be_clickable((By.XPATH, "//button[text()='ok']"))
        )
        ok_button.click()
        return True

    except TimeoutException:
        # –ü–æ–ø–∞–ø –Ω–µ –ø–æ—è–≤–∏–ª—Å—è ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–ø–∞–ª –ª–∏ —Å–∞–π—Ç
        page_text = driver.page_source.lower()
        for message in ("this site can‚Äôt be reached", "this site can't be reached", "runtime error"):
            if message in page_text:
                logger.error("üö´ –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: This site can't be reached")
                driver.quit()
                return True  # –°—á–∏—Ç–∞–µ–º –∫–∞–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –ø–æ–ø–∞–ø—É
        logger.info("‚úÖ –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –∏ —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.")
        return False
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞: {e}")
        return False


def check_salter(driver, param, timeout=5):
    try:
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —ç–º—É–ª–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏
        scroll_page(driver)
        move_mouse(driver)

        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ—Ç–∞ {param}...")
        selector = f'a[href="/Services/Booking/{param}"]'
        element = WebDriverWait(driver, timeout).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, selector))
        )
        element.send_keys(Keys.ENTER)
        random_sleep()

        if not check_popup_or_site_down(driver):
            logger.info("üü¢ –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—è–≤–∏–ª—Å—è —Å–ª–æ—Ç!")
            driver.save_screenshot("slot.png")
            Path("slot.html").write_text(driver.page_source, encoding="utf-8")

            send_message(f"–í–æ–∑–º–æ–∂–Ω–æ –ø–æ—è–≤–∏–ª—Å—è —Å–ª–æ—Ç –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ {BASE_URL}/Services/Booking/{param}")
            send_pic("slot.png")
    except TimeoutException:
        logger.warning(f"‚è±Ô∏è –≠–ª–µ–º–µ–Ω—Ç {param} –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ {timeout} —Å–µ–∫—É–Ω–¥.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–ª–æ—Ç–∞ {param}: {e}")
